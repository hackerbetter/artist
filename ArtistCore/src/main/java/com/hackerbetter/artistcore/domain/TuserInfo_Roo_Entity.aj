// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.hackerbetter.artistcore.domain;

import com.hackerbetter.artistcore.domain.TuserInfo;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityManager;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PersistenceContext;
import javax.persistence.Table;
import org.springframework.transaction.annotation.Transactional;

privileged aspect TuserInfo_Roo_Entity {
    
    declare @type: TuserInfo: @Entity;
    
    declare @type: TuserInfo: @Table(name = "tuserinfo");
    
    @PersistenceContext(unitName = "persistenceUnit")
    transient EntityManager TuserInfo.entityManager;
    
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "userno")
    private Long TuserInfo.userno;
    
    public Long TuserInfo.getUserno() {
        return this.userno;
    }
    
    public void TuserInfo.setUserno(Long id) {
        this.userno = id;
    }
    
    @Transactional("transactionManager")
    public void TuserInfo.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional("transactionManager")
    public void TuserInfo.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            TuserInfo attached = TuserInfo.findTuserInfo(this.userno);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional("transactionManager")
    public void TuserInfo.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional("transactionManager")
    public void TuserInfo.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional("transactionManager")
    public TuserInfo TuserInfo.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        TuserInfo merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager TuserInfo.entityManager() {
        EntityManager em = new TuserInfo().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long TuserInfo.countTuserInfoes() {
        return entityManager().createQuery("SELECT COUNT(o) FROM TuserInfo o", Long.class).getSingleResult();
    }
    
    public static List<TuserInfo> TuserInfo.findAllTuserInfoes() {
        return entityManager().createQuery("SELECT o FROM TuserInfo o", TuserInfo.class).getResultList();
    }
    
    public static TuserInfo TuserInfo.findTuserInfo(Long userno) {
        if (userno == null) return null;
        return entityManager().find(TuserInfo.class, userno);
    }
    
    public static List<TuserInfo> TuserInfo.findTuserInfoEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM TuserInfo o", TuserInfo.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
